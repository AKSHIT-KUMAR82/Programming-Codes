#include<iostream>
using namespace std;

/* INHERITANCE IS A CONCEPT IN WHICH WE CREATE NEW CLASSES WITH 
 THE HELP OF EXISTING ONES...
 ONE OF THE MAIN KEY FEATURE OF OOPS IS RESUABILITY WHICH FORTUNATELY
 USED IN THE INHERITANCE CONCEPT...

 :- THERE CAN BE MANY CLASSES WHICH ARE INHERITED FROM A SAME CLASS
 THAT INHERITANCE IS CALLED HIERARCHICAL INHERITANCE
 :- WHEN WE INHERIT A CLASS FROM MORE THAN ONE CLASS , THAT IS CALLED
 MULTIPLE INHERITANCE..
 :- WHEN WE INHERIT A SUBCLASS/INHERITED CLASS FROM ONLY ONE CLASS
 IS CALLED SINGLE INHERITANCE..
 :- WHEN WE INHERIT A CLASS FROM AN ANOTHER INHERITED CLASS IS CALLED
 MULTIPLE INHERITANCE...
 :- WHEN HIRERARICAL AND MULTIPLE INHERITANCE OCCURS SIMULTANEOUSLY
 THAT IS CALLED HYBRID INHERITANCE...  
 
 NOTE : THE CLASS WHICH WILL BE INHERITED IS CALLED SUBCLASS/INHERITED CLASS
 WHEREAS THE CLASS FROM WHICH IT IS INHERITED IS CALLED BASE CLASS*/

 class ak //BASE CLASS...
 {
    private:
    int data;
    public:
    void setdata()
    {
        cout<<"ENTER DATA FOR THE CURRENT INSTANCE : ";
        cin>>this->data;
    }
    int getdata()
    {
        return (this->data);
    }
 };

 class sk:public ak{ //SINGLE INHERITANCE...
    //DERIVED CLASS/SUBCLASS PRIVATELY INHERITED BY CLASS AK
 };

 class pk:public ak{
     //SINGLE INHERITANCE...EXTENDED INHERITED CLASS...
     private:
     int a;
     public:
     int cal()
     {
        this->a=getdata()*2;
        return a;
     }
 };

 int main()
 {

    ak obj1;
    sk obj2;
    /* PRIVATE MEMBERS OF THE BASE CLASS NEVER BE INHERITED BY 
    IT'S SUB CLASS WHILE HERE WE HAD INHERITED CLASS AK PRIVATELY
    WHICH INHERITS PUBLIC MEMBERS OF BASE CLASS PRIVATELY...*/
    obj1.setdata();
    obj2.setdata();
    /*ALTHOUGH PRIVATE MEMBERS OF A BASE CLASS IS NOT INHERITED
    IN THE SUBCLASS BUT WE CAN ACCESS THEM IN THE INHERITED 
    CLASS USING MEMBER FUNCTIONS...*/
    pk obj3;
    obj3.setdata();
    cout<<"SUBCLASS PK CAL FUCNTION RETURNS : "<<obj3.cal();
 }
 
