/* HERE ARE THE NOTES OF OOPS CONCEPTS */

Q1) DIFF BETWEEN PRIVATE AND PROTECTED DATA MEMBERS >>

A) KEY DIFF IS THAT PRIVATE MEMBERS CAN BE ACCESSED WITHIN THE CLASS ONLY , WE EVEN CANNOT ACCESS THEM FROM 
DERIVED CLASS OF ITS ORIGINAL PARENT CLASS BUT FOR PROTECTED DATA MEMBERS IT CAN BE ACCESSED FROM 
DERIVED CLASS EASILY....

Q2) WHAT IS THE USE OF THIS-> POINTER >>

A) THIS-> POINTER IS USED TO ACCESS THE DATA MEMBERS OF THE CURRENT INSTANCE OF CLASS AND GENERALLY 
USED WHEN LOCAL VARIABLES,PARAMETERS AND DATA MEMBERS HAVE COMMON NAME IN ORDER TO REMOVE AMBIGUITY....

>> WHEN THERE IS MORE THAN ONE CONSTRUCTOR IN ANY CLASS THEN THAT IS CALLED CONSTRUCTOR OVERLOADING....

>> MAIN DIFFERENCES BETWEEN CONSTRUCTOR AND DESTRUCTOR : 
1) FIRST DIFF , SYNTACTICAL DIFFERENCE IN THEIR DECLARATIONS... ( CONST : CLASS_NAME(){ } ),( DEST : ~CLASS_NAME(){ } )...
2) SECOND DIFF , CONSTRUCTOR MAY OR MAY NOT TAKE ANY PARAMETERS BUT DESTRUCTOR ABSOLUTELY DOES NOT TAKE ANY PARAMETERS...
3) CONSTRUCTOR IS USED TO INITIALIZE THE OBJECT WHILE DESTRUCTOR IS USED TO DESTROY THE OBJECT IN ORDER TO
FREED THE RESOURCES AND MEMORY ASSOCIATED WITH IT....

>> WE CANNOT OVERLOAD 4 OPERATORS :   :: , . , ?: , sizeof() ....REASON IS THAT THESE OPERATOR USES CLASSES AS OPERANDS INSTEAD OF OBJECTS...

>>
THE MAIN DIFF BETWEEN REFERENCES AND POINTERS ARE AS FOLLOWS : 

1) POINTERS CAN BE NULL BUT REFERENCES CANNOT BE...
2) POINTERS ARE REPRESENTED BY * WHILE REFERENCES BY &...
3) POINTERS CAN HAVE DIFF ADDRESSES BUT REFERENCES ONCE INTIALIZED WITH ANY OBJ 
THEN CANNOT BE CHANGED...
4) POINTERS MAY OR MAY NOT BE INTIALIZED BUT REFERNCES MUST BE INTIALIZED BY ANY 
REFERENCE...
5) IN REFERENCES THEIR IS NO NEED OF DEFRENCING YOU JUST ACCESS MEMBERS BY . OPERATOR WHILE
IN POINTERS WE NEED *(DEFRENCING OPERATOR) TO ACCESS OR MANIPULATE THE VALUES... 
